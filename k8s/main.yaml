apiVersion: v1
kind: Namespace
metadata:
  name: nodeapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodeapp
  namespace: nodeapp
spec:
  selector:
    matchLabels:
      app: nodeapp
  replicas: 1
  template:
    metadata:
      labels:
        app: nodeapp
    spec:
      containers:
      - image: 301581196284.dkr.ecr.us-east-1.amazonaws.com/my-app-repo:latest
        name: nodeapp
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: nodeapp
  namespace: nodeapp
spec:
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: NodePort
  selector:
    app: nodeapp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nodeapp-ingress
  namespace: nodeapp
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:301581196284:certificate/db2821d5-2a66-48d2-a4ce-231c933cf7a1
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http2.enabled=true
    alb.ingress.kubernetes.io/scheme: internet-facing
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: alb
spec:
  rules:
  - host: sample-django.pp.ua
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nodeapp
            port:
              number: 80
  tls:
  - hosts:
    - sample-django.pp.ua